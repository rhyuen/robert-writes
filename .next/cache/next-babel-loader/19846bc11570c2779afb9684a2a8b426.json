{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/Robert/Desktop/wslcode/next/markdown_trois/pages/posts/[id].js\";\nimport Layout from \"../../shared/layout\";\nimport fs from \"fs\";\nexport default function Post({}) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: \"indiviuald page.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\nexport async function getStaticPaths() {\n  const fileNames = fs.readdirSync(postsDirectory);\n  const slugs = fileNames.map(f => {\n    return {\n      params: {\n        id: f.replace(/\\.md$/, \"\")\n      }\n    };\n  });\n  return {\n    paths: slugs,\n    fallback: false\n  };\n}\nexport function getStaticProps({\n  params\n}) {\n  console.log('fml');\n  console.log(params.id);\n}","map":{"version":3,"sources":["/mnt/c/Users/Robert/Desktop/wslcode/next/markdown_trois/pages/posts/[id].js"],"names":["Layout","fs","Post","getStaticPaths","fileNames","readdirSync","postsDirectory","slugs","map","f","params","id","replace","paths","fallback","getStaticProps","console","log"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,EAAP,MAAe,IAAf;AAGA,eAAe,SAASC,IAAT,CAAc,EAAd,EAAiB;AAC5B,sBACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMC,SAAS,GAAGH,EAAE,CAACI,WAAH,CAAeC,cAAf,CAAlB;AACA,QAAMC,KAAK,GAAIH,SAAS,CAACI,GAAV,CAAcC,CAAC,IAAI;AAC9B,WAAO;AACHC,MAAAA,MAAM,EAAE;AACJC,QAAAA,EAAE,EAAEF,CAAC,CAACG,OAAF,CAAU,OAAV,EAAmB,EAAnB;AADA;AADL,KAAP;AAKH,GANc,CAAf;AAOA,SAAO;AACHC,IAAAA,KAAK,EAAIN,KADN;AAEHO,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH;AAED,OAAO,SAASC,cAAT,CAAwB;AAACL,EAAAA;AAAD,CAAxB,EAAiC;AACpCM,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACC,EAAnB;AACH","sourcesContent":["import Layout from \"../../shared/layout\";\nimport fs from \"fs\";\n\n\nexport default function Post({}){\n    return (\n        <Layout>\n            indiviuald page.\n        </Layout>\n    )\n}\n\nexport async function getStaticPaths(){\n    const fileNames = fs.readdirSync(postsDirectory);\n    const slugs =  fileNames.map(f => {\n        return {\n            params: {\n                id: f.replace(/\\.md$/, \"\")\n            }\n        };\n    });\n    return {\n        paths:   slugs,\n        fallback: false\n    }\n}\n\nexport function getStaticProps({params}){\n    console.log('fml');\n    console.log(params.id);\n}"]},"metadata":{},"sourceType":"module"}