{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/Robert/Desktop/wslcode/next/markdown_trois/pages/posts/[id].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../../shared/layout\";\nimport { getPostIds, getPostContent } from \"../../lib/posts\";\nimport Markdown from \"react-markdown\";\nexport default function Post({\n  content\n}) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Individual Page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Markdown, {\n      source: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\nexport async function getStaticPaths() {\n  const blah = getPostIds();\n  return {\n    paths: blah,\n    fallback: false\n  };\n}\nexport function getStaticProps({\n  params\n}) {\n  console.log('fml');\n  console.log(params.id);\n  const currentPost = getPostContent(params.id);\n  console.log(currentPost.content);\n  return {\n    props: _objectSpread({}, currentPost)\n  };\n}","map":{"version":3,"sources":["/mnt/c/Users/Robert/Desktop/wslcode/next/markdown_trois/pages/posts/[id].js"],"names":["Layout","getPostIds","getPostContent","Markdown","Post","content","getStaticPaths","blah","paths","fallback","getStaticProps","params","console","log","id","currentPost","props"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAAQC,UAAR,EAAoBC,cAApB,QAAyC,iBAAzC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAGA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAwB;AACnC,sBACI,QAAC,MAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,MAAM,EAAIA;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;AAED,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMC,IAAI,GAAGN,UAAU,EAAvB;AACA,SAAO;AACHO,IAAAA,KAAK,EAAGD,IADL;AAEHE,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH;AAED,OAAO,SAASC,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAAiC;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,EAAnB;AACA,QAAMC,WAAW,GAAEb,cAAc,CAACS,MAAM,CAACG,EAAR,CAAjC;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,WAAW,CAACV,OAAxB;AACA,SAAO;AACHW,IAAAA,KAAK,oBACED,WADF;AADF,GAAP;AAKH","sourcesContent":["import Layout from \"../../shared/layout\";\nimport {getPostIds, getPostContent} from \"../../lib/posts\";\nimport Markdown from \"react-markdown\";\n\n\nexport default function Post({content}){\n    return (\n        <Layout>\n            <h1>Individual Page.</h1>\n            <Markdown source = {content}/>\n        </Layout>\n    )\n}\n\nexport async function getStaticPaths(){\n    const blah = getPostIds();     \n    return {\n        paths:  blah,\n        fallback: false\n    }\n}\n\nexport function getStaticProps({params}){\n    console.log('fml');\n    console.log(params.id);\n    const currentPost= getPostContent(params.id);\n    \n    console.log(currentPost.content);\n    return {\n        props: {\n            ...currentPost\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}