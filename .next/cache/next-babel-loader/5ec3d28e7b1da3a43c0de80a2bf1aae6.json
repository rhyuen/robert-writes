{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/Robert/Desktop/wslcode/next/markdown_trois/pages/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../shared/layout\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport matter from \"gray-matter\";\nexport default function Home({}) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: \"asdf\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\nexport function getStaticProps() {\n  const postsDir = path.join(process.cwd(), \"content\");\n  const allPostsData = fs.readdirSync(postsDir);\n  const paths = allPostsData.map(p => {\n    let curr = path.join(process.cwd(), \"content\", p);\n    let content = fs.readFileSync(curr, \"utf8\");\n    let matterResult = matter(content);\n    curr = curr.replace(\".md\", \"\");\n    return _objectSpread(_objectSpread({}, matterResult.data), {}, {\n      curr\n    });\n  });\n  return {\n    props: {\n      data: paths\n    }\n  };\n}\n;","map":{"version":3,"sources":["/mnt/c/Users/Robert/Desktop/wslcode/next/markdown_trois/pages/index.js"],"names":["Layout","path","fs","matter","Home","getStaticProps","postsDir","join","process","cwd","allPostsData","readdirSync","paths","map","p","curr","content","readFileSync","matterResult","replace","data","props"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAGA,eAAe,SAASC,IAAT,CAAc,EAAd,EAAiB;AAC5B,sBACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED,OAAO,SAASC,cAAT,GAAyB;AAC5B,QAAMC,QAAQ,GAAGL,IAAI,CAACM,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,SAAzB,CAAjB;AACA,QAAMC,YAAY,GAAGR,EAAE,CAACS,WAAH,CAAeL,QAAf,CAArB;AACA,QAAMM,KAAK,GAAGF,YAAY,CAACG,GAAb,CAAiBC,CAAC,IAAI;AAChC,QAAIC,IAAI,GAAGd,IAAI,CAACM,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,SAAzB,EAAoCK,CAApC,CAAX;AACA,QAAIE,OAAO,GAAGd,EAAE,CAACe,YAAH,CAAgBF,IAAhB,EAAsB,MAAtB,CAAd;AACA,QAAIG,YAAY,GAAGf,MAAM,CAACa,OAAD,CAAzB;AACAD,IAAAA,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP;AACA,2CAAWD,YAAY,CAACE,IAAxB;AAA8BL,MAAAA;AAA9B;AAEH,GAPa,CAAd;AASA,SAAO;AACHM,IAAAA,KAAK,EAAE;AACHD,MAAAA,IAAI,EAAER;AADH;AADJ,GAAP;AAKH;AAAA","sourcesContent":["import Layout from \"../shared/layout\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport matter from \"gray-matter\";\n\n\nexport default function Home({}){\n    return (\n        <Layout>\n            asdf\n        </Layout>\n    )\n}\n\nexport function getStaticProps(){\n    const postsDir = path.join(process.cwd(), \"content\");\n    const allPostsData = fs.readdirSync(postsDir);    \n    const paths = allPostsData.map(p => {\n        let curr = path.join(process.cwd(), \"content\", p);        \n        let content = fs.readFileSync(curr, \"utf8\"); \n        let matterResult = matter(content)      \n        curr = curr.replace(\".md\", \"\");\n        return {...matterResult.data, curr};\n        \n    });\n\n    return {\n        props: {\n            data: paths\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}